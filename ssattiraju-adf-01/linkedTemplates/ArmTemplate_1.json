{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ssattiraju-adf-01"
		},
		"Hive1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "13.76.133.55"
		},
		"Hive1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "hive"
		},
		"triggerOnFileUploadDataSet-01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/7c1d967f-37f1-4047-bef7-05af9aa80fe2/resourceGroups/demo-rg-01/providers/Microsoft.Storage/storageAccounts/ssattirajudemorgstg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/UCI_data_web')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference",
					"parameters": {
						"fileToDownload": {
							"value": "@dataset().webFileName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"webFileName": {
						"type": "string",
						"defaultValue": "german.data"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UCL_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "UCI_data",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PS_20174392719_1491204439457_log.csv",
						"folderPath": "archive.zip",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "step",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "nameOrig",
						"type": "String"
					},
					{
						"name": "oldbalanceOrg",
						"type": "String"
					},
					{
						"name": "newbalanceOrig",
						"type": "String"
					},
					{
						"name": "nameDest",
						"type": "String"
					},
					{
						"name": "oldbalanceDest",
						"type": "String"
					},
					{
						"name": "newbalanceDest",
						"type": "String"
					},
					{
						"name": "isFraud",
						"type": "String"
					},
					{
						"name": "isFlaggedFraud",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "step",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "amount",
						"type": "UTF8"
					},
					{
						"name": "nameOrig",
						"type": "UTF8"
					},
					{
						"name": "oldbalanceOrg",
						"type": "UTF8"
					},
					{
						"name": "newbalanceOrig",
						"type": "UTF8"
					},
					{
						"name": "nameDest",
						"type": "UTF8"
					},
					{
						"name": "oldbalanceDest",
						"type": "UTF8"
					},
					{
						"name": "newbalanceDest",
						"type": "UTF8"
					},
					{
						"name": "isFraud",
						"type": "UTF8"
					},
					{
						"name": "isFlaggedFraud",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hive1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Hive",
				"typeProperties": {
					"host": "[parameters('Hive1_properties_typeProperties_host')]",
					"port": 10000,
					"serverType": "HiveServer2",
					"thriftTransportProtocol": "HTTP",
					"authenticationType": "Username",
					"serviceDiscoveryMode": false,
					"useNativeQuery": false,
					"username": "[parameters('Hive1_properties_typeProperties_username')]",
					"password": false,
					"enableSsl": false,
					"storageReference": {
						"referenceName": "AzureDataLakeStorageDefault",
						"type": "LinkedServiceReference"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UCL_Data",
								"type": "DatasetReference"
							},
							"name": "GermanDataSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "UCI_Data_Parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Parse1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'filename',\n\twildcardPaths:['UCI_data/']) ~> GermanDataSource\nGermanDataSource parse({_col0_} = {_col0_} ? (col1 as string,\n\t\tcol2 as integer,\n\t\tcol3 as string,\n\t\tcol4 as string,\n\t\tcol5 as integer,\n\t\tcol6 as string,\n\t\tcol7 as string,\n\t\tcol8 as integer,\n\t\tcol9 as string,\n\t\tcol10 as string,\n\t\tcol11 as integer,\n\t\tcol12 as string,\n\t\tcol13 as integer,\n\t\tcol14 as string,\n\t\tcol15 as string,\n\t\tcol16 as integer,\n\t\tcol17 as string,\n\t\tcol18 as integer,\n\t\tcol19 as string,\n\t\tcol20 as string,\n\t\tcol21 as integer),\n\tformat: 'delimited',\n\tcolumnNamesAsHeader: false,\n\tcolumnDelimiter: ' ',\n\tnullValue: '') ~> Parse1\nParse1 derive(each({_col0_}, match(startsWith(name,'col')), $$+'_d' = $$)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tcol1_d,\n\t\tcol2_d,\n\t\tcol3_d,\n\t\tcol4_d,\n\t\tcol5_d,\n\t\tcol6_d,\n\t\tcol7_d,\n\t\tcol8_d,\n\t\tcol9_d,\n\t\tcol10_d,\n\t\tcol11_d,\n\t\tcol12_d,\n\t\tcol13_d,\n\t\tcol14_d,\n\t\tcol15_d,\n\t\tcol16_d,\n\t\tcol17_d,\n\t\tcol18_d,\n\t\tcol19_d,\n\t\tcol20_d,\n\t\tcol21_d\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UCL_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "rawDataCsv",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> rawDataCsv",
							"dataset": {
								"referenceName": "rawDataCsv",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared rawDataCsv = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://ssattirajudemorgstg.dfs.core.windows.net/raw/archive.zip/PS_20174392719_1491204439457_log.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = rawDataCsv\r\nin\r\n  Source;\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rawDataCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy OnPrem to Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "step",
											"type": "String"
										},
										"sink": {
											"name": "step",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String"
										},
										"sink": {
											"name": "amount",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "nameOrig",
											"type": "String"
										},
										"sink": {
											"name": "nameOrig",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "oldbalanceOrg",
											"type": "String"
										},
										"sink": {
											"name": "oldbalanceOrg",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "newbalanceOrig",
											"type": "String"
										},
										"sink": {
											"name": "newbalanceOrig",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "nameDest",
											"type": "String"
										},
										"sink": {
											"name": "nameDest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "oldbalanceDest",
											"type": "String"
										},
										"sink": {
											"name": "oldbalanceDest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "newbalanceDest",
											"type": "String"
										},
										"sink": {
											"name": "newbalanceDest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "isFraud",
											"type": "String"
										},
										"sink": {
											"name": "isFraud",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "isFlaggedFraud",
											"type": "String"
										},
										"sink": {
											"name": "isFlaggedFraud",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "rawDataCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "rawDataParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "convert_to_bronze",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy OnPrem to Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/ssattiraju@microsoft.com/convert_to_delta",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.input",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "bronze_to_silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "convert_to_bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GermanDataSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ML_Training",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "bronze_to_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/ssattiraju@microsoft.com/Financial Fraud Detection using Decision Tree Machine Learning Models",
							"libraries": [
								{
									"pypi": {
										"package": "mlflow"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "transform_data_notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "bronze_to_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/ssattiraju@microsoft.com/data_transformation",
							"libraries": [
								{
									"pypi": {
										"package": "mlflow"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "transform_data_notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"rawDataCsv": {},
									"UserQueryGoldDataParquet": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryGoldDataParquet",
											"dataset": {
												"referenceName": "GoldDataParquet",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn1 as string,\n\t\tColumn2 as string,\n\t\tColumn3 as string,\n\t\tColumn4 as string,\n\t\tColumn5 as string,\n\t\tColumn6 as string,\n\t\tColumn7 as string,\n\t\tColumn8 as string,\n\t\tColumn9 as string,\n\t\tColumn10 as string,\n\t\tColumn11 as string,\n\t\tstep as string,\n\t\ttype as string,\n\t\tamount as string,\n\t\tnameOrig as string,\n\t\toldbalanceOrg as string,\n\t\tnewbalanceOrig as string,\n\t\tnameDest as string,\n\t\toldbalanceDest as string,\n\t\tnewbalanceDest as string,\n\t\tisFraud as string,\n\t\tisFlaggedFraud as string\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryGoldDataParquet"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"input": {
						"type": "string",
						"defaultValue": "https://ssattirajudemorgstg.blob.core.windows.net/raw/archive.zip/PS_20174392719_1491204439457_log.csv"
					}
				},
				"folder": {
					"name": "Pipeline-01"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rawDataCsv')]",
				"[concat(variables('factoryId'), '/datasets/rawDataParquet')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Web UCI Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UCI_data_web",
								"type": "DatasetReference",
								"parameters": {
									"webFileName": "german.data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UCL_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Clean Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Download Web UCI Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GermanDataSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "integrationRuntime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Machine Learning Pipeline",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [
							{
								"activity": "Clean Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"mlPipelineId": "382e21c1-5f22-4b6c-b1b9-9e394fa2da1c"
						},
						"linkedServiceName": {
							"referenceName": "AzureMLService1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Pipeline-01"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UCI_data_web')]",
				"[concat(variables('factoryId'), '/datasets/UCL_Data')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerOnFileUploadDataSet-01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline3",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/",
					"blobPathEndsWith": "xlsx",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('triggerOnFileUploadDataSet-01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline3')]"
			]
		}
	]
}