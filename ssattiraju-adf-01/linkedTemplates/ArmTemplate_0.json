{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ssattiraju-adf-01"
		},
		"AzureDataLakeStorageDefault_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageDefault'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricksDeltaLake1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake1'"
		},
		"AzureDataLakeStorageDefault_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ssattirajudemorgstg.dfs.core.windows.net/"
		},
		"ssattdlz01devencur_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/7c1d967f-37f1-4047-bef7-05af9aa80fe2/resourceGroups/ssattdlz01-dev-storage/providers/Microsoft.Storage/storageAccounts/ssattdlz01devencur"
		},
		"ssattdlz01devencur_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"ssattdlz01devraw_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/7c1d967f-37f1-4047-bef7-05af9aa80fe2/resourceGroups/ssattdlz01-dev-storage/providers/Microsoft.Storage/storageAccounts/ssattdlz01devraw"
		},
		"ssattdlz01devraw_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"ssattdlz01devsqlserver001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/7c1d967f-37f1-4047-bef7-05af9aa80fe2/resourceGroups/ssattdlz01-dev-metadata/providers/Microsoft.Sql/servers/ssattdlz01-dev-sqlserver001"
		},
		"ssattdlz01devsqlserver001_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"ssattdlz01devvault001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/7c1d967f-37f1-4047-bef7-05af9aa80fe2/resourceGroups/ssattdlz01-dev-metadata/providers/Microsoft.KeyVault/vaults/ssattdlz01-dev-vault001"
		},
		"ssattdlz01devvault001_properties_groupId": {
			"type": "string",
			"defaultValue": "vault"
		},
		"ssattdlz01devvault001_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"ssattdlz01-dev-vault001.vaultcore.azure.net"
			]
		},
		"Hive1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "13.76.133.55"
		},
		"Hive1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "hive"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageDefault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageDefault_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageDefault_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-748061744436624.4.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "1119-063356-b59rji71"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-748061744436624.4.azuredatabricks.net",
					"clusterId": "1119-063356-b59rji71",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake1_accessToken')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ssattdlz01devencur')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ssattdlz01devencur_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ssattdlz01devencur_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ssattdlz01devraw')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ssattdlz01devraw_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ssattdlz01devraw_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ssattdlz01devsqlserver001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ssattdlz01devsqlserver001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ssattdlz01devsqlserver001_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ssattdlz01devvault001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ssattdlz01devvault001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ssattdlz01devvault001_properties_groupId')]",
				"fqdns": "[parameters('ssattdlz01devvault001_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDatasetSilver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "silver"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "delta",
					"table": "kaggle_silver_data"
				},
				"schema": [
					{
						"name": "step",
						"type": "integer"
					},
					{
						"name": "type",
						"type": "string"
					},
					{
						"name": "amount",
						"type": "double"
					},
					{
						"name": "nameOrig",
						"type": "string"
					},
					{
						"name": "oldbalanceOrg",
						"type": "double"
					},
					{
						"name": "newbalanceOrig",
						"type": "double"
					},
					{
						"name": "nameDest",
						"type": "string"
					},
					{
						"name": "oldbalanceDest",
						"type": "double"
					},
					{
						"name": "newbalanceDest",
						"type": "double"
					},
					{
						"name": "isFraud",
						"type": "integer"
					},
					{
						"name": "isFlaggedFraud",
						"type": "integer"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUpTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "lookup_table.csv",
						"folderPath": "lookup_data",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremCompressedData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OnPrem"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "archive.zip",
						"fileSystem": "onprem"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SilverDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "silver"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "payment_agg",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PS_20174392719_1491204439457_log.csv",
						"folderPath": "archive.zip",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawDataParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "parquet",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "step",
						"type": "INT32"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "amount",
						"type": "DOUBLE"
					},
					{
						"name": "nameOrig",
						"type": "UTF8"
					},
					{
						"name": "oldbalanceOrg",
						"type": "DOUBLE"
					},
					{
						"name": "newbalanceOrig",
						"type": "DOUBLE"
					},
					{
						"name": "nameDest",
						"type": "UTF8"
					},
					{
						"name": "oldbalanceDest",
						"type": "DOUBLE"
					},
					{
						"name": "newbalanceDest",
						"type": "DOUBLE"
					},
					{
						"name": "isFraud",
						"type": "INT32"
					},
					{
						"name": "isFlaggedFraud",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hive1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Hive",
				"typeProperties": {
					"host": "[parameters('Hive1_properties_typeProperties_host')]",
					"port": 10000,
					"serverType": "HiveServer2",
					"thriftTransportProtocol": "HTTP",
					"authenticationType": "Username",
					"serviceDiscoveryMode": false,
					"useNativeQuery": false,
					"username": "[parameters('Hive1_properties_typeProperties_username')]",
					"password": false,
					"enableSsl": false,
					"storageReference": {
						"referenceName": "AzureDataLakeStorageDefault",
						"type": "LinkedServiceReference"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoldDataParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDefault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "gold"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDefault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy OnPrem to Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremCompressedData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "rawDataBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Pipeline-01"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPremCompressedData')]",
				"[concat(variables('factoryId'), '/datasets/rawDataBinary')]"
			]
		}
	]
}